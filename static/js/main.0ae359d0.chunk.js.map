{"version":3,"sources":["types.js","pages/signIn/index.js","actions/index.js","lotties/loadingAnimation.js","pages/register/index.js","pages/dashboard/index.js","App.js","reducers/registerReducer.js","reducers/signInReducer.js","reducers/index.js","store/configureStore.js","index.js"],"names":["REGISTER","REGISTER_SUCCESS","REGISTER_FAILED","REGISTER_RESET","SIGNIN","SIGNIN_SUCCESS","SIGNIN_FAILED","SignIn","e","preventDefault","this","_email","value","_password","foundUser","props","userData","find","list","email","console","log","undefined","password","alert","submitSignIn","history","push","className","onSubmit","type","placeholder","ref","to","React","Component","mapDispatchToProp","data","dispatch","setTimeout","payload","error","connect","state","register","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","LoadingAnimation","options","height","width","Register","_confirmPassword","newUser","key","Date","now","submitRegister","userJSON","resetRegister","registerData","isSignedUp","isLoading","disabled","onClick","JSON","stringify","Dashboard","signin","user","isSignedIn","basename","process","path","component","exact","defaultState","registerReducer","action","isSignIn","signInReducer","combineReducers","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.0ae359d0.chunk.js","sourcesContent":["export const REGISTER = \"REGISTER\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAILED = \"REGISTER_FAILED\";\nexport const REGISTER_RESET = \"REGISTER_RESET\";\n\nexport const SIGNIN = \"SIGNIN\";\nexport const SIGNIN_SUCCESS = \"SIGNIN_SUCCESS\";\nexport const SIGNIN_FAILED = \"SIGNIN_FAILED\";\n","import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport { submitSignIn } from \"../../actions\";\n\nclass SignIn extends React.Component {\n  submitSignIn(e) {\n    e.preventDefault();\n\n    // validate field not empty\n    if (!this._email.value || !this._password.value) {\n      alert(\"Fill in the form\");\n      return;\n    }\n\n    // check the email from the global state\n    const foundUser = this.props.userData.find(\n      (list) => list.email === this._email.value\n    );\n    console.log(foundUser);\n    if (foundUser === undefined) {\n      alert(`No user ${this._email.value} in the local storage`);\n      return;\n    }\n\n    // check if the password is correct\n    if (foundUser.password !== this._password.value) {\n      alert(\"Password is incorect!\");\n      return;\n    } else {\n      console.log(\"foundUser: \", foundUser);\n      this.props.submitSignIn(foundUser);\n      return this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"bg-gray-200 w-screen h-screen flex justify-center items-center\">\n        <div className=\"lg:w-1/3 md:w-3/5 sm:w-5/6 text-center\">\n          <p className=\"text-3xl font-bold mb-8\">Welcome 👋</p>\n          <form className=\"w-full\" onSubmit={(e) => this.submitSignIn(e)}>\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              className=\"bg-white w-full rounded px-3 py-2 mb-4\"\n              ref={(e) => (this._email = e)}\n            />\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              className=\"bg-white w-full rounded px-3 py-2 mb-4\"\n              ref={(e) => (this._password = e)}\n            />\n            <button\n              type=\"submit\"\n              className=\"bg-blue-600 text-white font-semibold w-full rounded px-3 py-2 mt-4 mb-4\"\n            >\n              Login\n            </button>\n          </form>\n          <Link to=\"/register\">\n            <button\n              type=\"button\"\n              className=\"text-blue-600 font-semibold w-full rounded px-3 py-2 mb-4\"\n            >\n              Register New Account\n            </button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProp = (state) => ({\n  userData: state.register.data,\n});\n\nconst mapDispatchToProp = {\n  submitSignIn: submitSignIn,\n};\n\nexport default connect(mapStateToProp, mapDispatchToProp)(SignIn);\n","import * as type from \"../types\";\n\nexport const submitRegister = (data) => (dispatch) => {\n  try {\n    dispatch({\n      type: type.REGISTER,\n    });\n    setTimeout(() => {\n      dispatch({\n        type: type.REGISTER_SUCCESS,\n        payload: data,\n      });\n    }, 4000);\n  } catch (error) {\n    dispatch({\n      type: type.REGISTER_FAILED,\n      error: error,\n    });\n  }\n};\n\nexport const resetRegister = () => {\n  return {\n    type: type.REGISTER_RESET,\n  };\n};\n\nexport const submitSignIn = (data) => (dispatch) => {\n  try {\n    dispatch({\n      type: type.SIGNIN,\n    });\n    setTimeout(() => {\n      dispatch({\n        type: type.SIGNIN_SUCCESS,\n        payload: data,\n      });\n    }, 1);\n  } catch (error) {\n    dispatch({\n      type: type.SIGNIN_FAILED,\n      error: error,\n    });\n  }\n};\n","import React from \"react\";\nimport Lottie from \"react-lottie\";\nimport animationData from \"./loading.json\";\n\nconst defaultOptions = {\n  loop: true,\n  autoplay: true,\n  animationData: animationData,\n  rendererSettings: {\n    preserveAspectRatio: \"xMidYMid slice\",\n  },\n};\n\nclass LoadingAnimation extends React.Component {\n  render() {\n    return (\n      <div>\n        <Lottie options={defaultOptions} height={25} width={100} />\n      </div>\n    );\n  }\n}\n\nexport default LoadingAnimation;\n","import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport { resetRegister, submitRegister } from \"../../actions\";\nimport LoadingAnimation from \"../../lotties/loadingAnimation\";\n\nclass Register extends React.Component {\n  submitRegister(e) {\n    e.preventDefault();\n\n    // validate field not empty\n    if (\n      !this._email.value ||\n      !this._password.value ||\n      !this._confirmPassword.value\n    ) {\n      alert(\"Fill in the form\");\n      return;\n    }\n\n    // confirm same password\n    if (this._password.value !== this._confirmPassword.value) {\n      alert(\"Password not match\");\n      return;\n    }\n\n    // push newUser into store\n\n    // console.log(this._email.value, this._password.value);\n    const newUser = {\n      key: Date.now(),\n      email: this._email.value,\n      password: this._password.value,\n    };\n    console.log(newUser);\n    this.props.submitRegister(newUser);\n\n    setTimeout(() => {\n      console.log(this.props.userJSON);\n    }, 4000);\n  }\n\n  resetRegister() {\n    this.props.resetRegister();\n  }\n\n  render() {\n    return (\n      <div className=\"bg-gray-200 w-screen h-screen flex justify-center items-center\">\n        <div className=\"lg:w-1/3 md:w-3/5 sm:w-5/6 text-center\">\n          <p className=\"text-3xl font-bold mb-8\">Hello New User ✌️</p>\n          <form className=\"w-full\" onSubmit={(e) => this.submitRegister(e)}>\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              className=\"bg-white w-full rounded px-3 py-2 mb-4\"\n              ref={(e) => (this._email = e)}\n            />\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              className=\"bg-white w-full rounded px-3 py-2 mb-4\"\n              ref={(e) => (this._password = e)}\n            />\n            <input\n              type=\"password\"\n              placeholder=\"Repeat password\"\n              className=\"bg-white w-full rounded px-3 py-2 mb-4\"\n              ref={(e) => (this._confirmPassword = e)}\n            />\n            {!this.props.registerData.isSignedUp ? (\n              this.props.registerData.isLoading ? (\n                <button\n                  type=\"button\"\n                  disabled\n                  className=\"bg-gray-400 text-gray-500 animate-pulse font-semibold w-full rounded px-3 py-2 mt-4 mb-4\"\n                >\n                  <LoadingAnimation />\n                </button>\n              ) : (\n                <button\n                  type=\"submit\"\n                  className=\"bg-blue-600 text-white font-semibold w-full rounded px-3 py-2 mt-4 mb-4\"\n                >\n                  Sign up\n                </button>\n              )\n            ) : (\n              <Link to=\"/\">\n                <button\n                  type=\"button\"\n                  className=\"bg-green-600 text-white font-semibold w-full rounded px-3 py-2 mt-4 mb-4\"\n                >\n                  Finished\n                </button>\n              </Link>\n            )}\n          </form>\n\n          {!this.props.registerData.isSignedUp ? (\n            <Link to=\"/\">\n              <button\n                type=\"submit\"\n                className=\"text-blue-600 font-semibold w-full rounded px-3 py-2 mb-4\"\n              >\n                Signed up already? Login here\n              </button>\n            </Link>\n          ) : (\n            <button\n              onClick={() => this.resetRegister()}\n              className=\"text-blue-600 font-semibold w-full rounded px-3 py-2 mb-4\"\n            >\n              Register again\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProp = (state) => ({\n  registerData: state.register,\n  userJSON: JSON.stringify(state.register.data),\n});\n\nconst mapDispatchToProp = {\n  submitRegister: submitRegister,\n  resetRegister: resetRegister,\n};\n\nexport default connect(mapStateToProp, mapDispatchToProp)(Register);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nclass Dashboard extends React.Component {\n  render() {\n    return (\n      <div className=\"bg-gray-200 w-screen h-screen flex justify-center items-center\">\n        <div className=\"lg:w-1/3 md:w-3/5 sm:w-5/6 text-center\">\n          <p className=\"text-3xl font-bold mb-8\">\n            Hello {this.props.userData.email} 🚀\n          </p>\n          <Link to=\"/\">\n            <button className=\"w-2/3 border-2 border-blue-600 text-blue-600 font-semibold rounded px-3 py-2 mt-4\">\n              Return to login page\n            </button>\n          </Link>\n          <div>\n            {/* {this.props.userData.map((list) => (\n              <div className=\"bg-white p-5\">\n                <p>{list.email}</p>\n                <p>{list.key}</p>\n                <p>{list.password}</p>\n              </div>\n            ))} */}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProp = (state) => ({\n  userData: state.signin.user,\n});\n\nconst mapDispatchToProp = {};\n\nexport default connect(mapStateToProp, mapDispatchToProp)(Dashboard);\n","import SignIn from \"./pages/signIn\";\nimport Register from \"./pages/register\";\nimport Dashboard from \"./pages/dashboard\";\nimport { connect } from \"react-redux\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path=\"/\" component={SignIn} exact></Route>\n        <Route path=\"/register\" component={Register} exact />\n        <Route path=\"/dashboard\" component={Dashboard} exact />\n      </Switch>\n    </Router>\n  );\n}\n\nconst mapStateToProp = (state) => ({\n  isSignedIn: state.signin.isSignedIn,\n});\n\nconst mapDispatchToProp = {};\n\nexport default connect(mapStateToProp, mapDispatchToProp)(App);\n","import * as type from \"../types\";\n\nconst defaultState = {\n  isLoading: false,\n  isSignedUp: false,\n  data: [],\n  error: null,\n};\n\nconst registerReducer = (state, action) => {\n  switch (action.type) {\n    case type.REGISTER:\n      return {\n        isLoading: true,\n        isSignedUp: false,\n        data: [...state.data],\n        error: null,\n      };\n\n    case type.REGISTER_SUCCESS:\n      return {\n        isLoading: false,\n        isSignedUp: true,\n        data: [...state.data, action.payload],\n        error: null,\n      };\n\n    case type.REGISTER_FAILED:\n      return {\n        isLoading: false,\n        isSignedUp: false,\n        data: [...state.data],\n        error: action.error,\n      };\n\n    case type.REGISTER_RESET:\n      return {\n        isLoading: false,\n        isSignedUp: false,\n        data: [...state.data],\n        error: null,\n      };\n\n    default:\n      return defaultState;\n  }\n};\n\nexport default registerReducer;\n","import * as type from \"../types\";\n\nconst defaultState = {\n  isLoading: false,\n  isSignIn: false,\n  user: {},\n  error: null,\n};\n\nconst signInReducer = (state, action) => {\n  switch (action.type) {\n    case type.SIGNIN:\n      return {\n        isLoading: true,\n        isSignIn: false,\n        user: {},\n        error: null,\n      };\n\n    case type.SIGNIN_SUCCESS:\n      return {\n        isLoading: false,\n        isSignIn: true,\n        user: action.payload,\n        error: null,\n      };\n\n    case type.SIGNIN_FAILED:\n      return {\n        isLoading: false,\n        isSignIn: false,\n        user: state.data,\n        error: action.error,\n      };\n    default:\n      return defaultState;\n  }\n};\n\nexport default signInReducer;\n","import { combineReducers } from \"redux\";\nimport registerReducer from \"./registerReducer\";\nimport signInReducer from \"./signInReducer\";\n\nexport default combineReducers({\n  register: registerReducer,\n  signin: signInReducer,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\n// all others reducers from here\nimport rootReducer from \"../reducers/index\";\n\nconst persistConfig = {\n  key: \"root\",\n  //   version: 1,\n  storage,\n};\n\n// reducers need to persist\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nlet persistor = persistStore(store);\n\nexport { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n// react redux\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./store/configureStore\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}